{
  "env": {
    "browser": true,
    "es2021": true,
    "node": true
  },
  "extends": [
    "plugin:@tanstack/eslint-plugin-query/recommended", // Uses the recommended rules from @eslint-plugin-react
    "plugin:react/recommended", // Uses the recommended rules from @eslint-plugin-react
    "plugin:prettier/recommended", // Enables eslint-plugin-prettier and eslint-config-prettier. This will display prettier errors as ESLint errors. Make sure this is always the last configuration in the extends array.
    "plugin:@typescript-eslint/eslint-recommended", //updates the eslint:recommended config to better suit Typescript
    "plugin:@typescript-eslint/recommended", //is a set of opinionated rules that adhere to TypeScript best practices
    "plugin:import/typescript", //is a set of opinionated rules that adhere to TypeScript best practices
    "plugin:import/recommended" //is a set of opinionated rules that adhere to TypeScript best practices
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 10,
    "sourceType": "module",
    "project": "./tsconfig.json"
  },
  "plugins": [
    "react",
    "react-hooks",
    "unused-imports",
    "simple-import-sort",
    "prettier",
    "import",
    "@tanstack/query"
  ],
  "rules": {
    // Place to specify ESLint rules. Can be used to overwrite rules specified from the extended configs
    "prettier/prettier": "error",
    "no-console": "off", // 'error'
    // "@typescript-eslint/indent": ["warning", 2],
    "react/jsx-uses-react": "off",
    "react/react-in-jsx-scope": "off",
    "react/destructuring-assignment": "off",
    "react-hooks/exhaustive-deps": "warn",
    "react/prop-types": "off",
    "react/jsx-no-useless-fragment": "error",
    "import/no-unresolved": [2, { "caseSensitive": false }],
    "import/prefer-default-export": "off", // Named export is easier to refactor automatically
    "import/no-default-export": "off",
    "simple-import-sort/exports": "error", // Export configuration for `eslint-plugin-simple-import-sort`
    "simple-import-sort/imports": [
      // Import configuration for `eslint-plugin-simple-import-sort`
      "error",
      {
        "groups": [
          // Packages `react` related packages come first.
          ["^react", "^@?\\w"],
          // Internal packages.
          ["^(@|components)(/.*|$)"],
          // Side effect imports.
          ["^\\u0000"],
          // Parent imports. Put `..` last.
          ["^\\.\\.(?!/?$)", "^\\.\\./?$"],
          // Other relative imports. Put same-folder imports and `.` last.
          ["^\\./(?=.*/)(?!/?$)", "^\\.(?!/?$)", "^\\./?$"],
          // Style imports.
          ["^.+\\.?(css)$"]
        ]
      }
    ],
    "no-unused-vars": "off",
    "unused-imports/no-unused-imports": "error",
    "unused-imports/no-unused-vars": [
      "warn",
      {
        "vars": "all",
        "varsIgnorePattern": "^_",
        "args": "after-used",
        "argsIgnorePattern": "^_"
      }
    ]
  },
  "settings": {
    "import/resolver": {
      "typescript": {}
    },
    "react": {
      "pragma": "React",
      "version": "detect"
    }
  },
  "ignorePatterns": ["commitlint.config.js"],
  "overrides": [
    {
      "files": ["src/**/*.ts?(x)"],
      "parserOptions": {
        "project": ["./tsconfig.json"]
      }
    },
    {
      "files": ["vite.config.ts"],
      "parserOptions": {
        "project": ["./tsconfig.node.json"]
      }
    },
    {
      "files": ["**/__tests__/**/*.ts?(x)"],
      "extends": ["plugin:testing-library/react"],
      "rules": {
        "@typescript-eslint/no-magic-numbers": ["off"],
        "testing-library/no-await-sync-events": [
          "error",
          {
            "eventModules": ["fire-event"]
          }
        ],
        "testing-library/no-manual-cleanup": "error",
        "testing-library/prefer-explicit-assert": "error",
        "testing-library/prefer-user-event": "error",
        "testing-library/prefer-wait-for": "error"
      }
    }
  ]
}
