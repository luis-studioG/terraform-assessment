{
    "env": {
      "browser": true,
      "es2021": true
    },
    "extends": [
      "eslint:recommended",
      "plugin:react/recommended",
      "plugin:@typescript-eslint/recommended",
      "prettier"
    ],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
      "ecmaFeatures": {
        "jsx": true,
        "tsx": true
      },
      "ecmaVersion": "latest",
      "sourceType": "module"
    },
    "plugins": [
      "react",
      "react-hooks",
      "@typescript-eslint",
      "simple-import-sort",
      "unused-imports",
      "prettier"
    ],
    "rules": {
      "prettier/prettier": [
        "error",
        {
          "singleQuote": true,
          "endOfLine": "auto"
        }
      ],
      "no-console": "error",
      "react/destructuring-assignment": "off",
      "react-hooks/exhaustive-deps": "off",
      "react/prop-types": "off",
      "react/jsx-uses-react": "off",
      "react/jsx-uses-vars": "off",
      "@typescript-eslint/comma-dangle": "off", // Avoid conflict rule between Eslint and Prettier
      "@typescript-eslint/consistent-type-imports": "error", // Ensure `import type` is used when it's necessary
      "import/prefer-default-export": "off", // Named export is easier to refactor automatically
      "simple-import-sort/exports": "error", // Export configuration for `eslint-plugin-simple-import-sort`
      "simple-import-sort/imports": [
        // Import configuration for `eslint-plugin-simple-import-sort`
        "error",
        {
          "groups": [
            // Packages `react` related packages come first.
            ["^react", "^@?\\w"],
            // Internal packages.
            ["^(@|components)(/.*|$)"],
            // Side effect imports.
            ["^\\u0000"],
            // Parent imports. Put `..` last.
            ["^\\.\\.(?!/?$)", "^\\.\\./?$"],
            // Other relative imports. Put same-folder imports and `.` last.
            ["^\\./(?=.*/)(?!/?$)", "^\\.(?!/?$)", "^\\./?$"],
            // Style imports.
            ["^.+\\.?(css)$"]
          ]
        }
      ],
      "no-unused-vars": "off",
      "@typescript-eslint/no-unused-vars": "off",
      "unused-imports/no-unused-imports": "error",
      "unused-imports/no-unused-vars": [
        "warn",
        { "vars": "all", "varsIgnorePattern": "^_", "args": "after-used", "argsIgnorePattern": "^_" }
      ]
    },
    "settings": {
      "import/resolver": {
        "typescript": {},
        "alias": {
          "map": [],
          "extensions": [".ts", ".tsx", ".js",".jsx",".scss"]
        }
      },
      "react": {
        "pragma": "React",
        "version": "detect"
      }
    }
  }
  